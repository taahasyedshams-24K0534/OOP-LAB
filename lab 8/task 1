#include<iostream>
#include<string>
using namespace std;

class Complex {
private:
    double real;
    double imag;
public:
    Complex(double r=0,double i=0):real(r),imag(i){}
    Complex operator+(const Complex& c){
        return Complex(real+c.real,imag+c.imag);
    }
    Complex operator-(const Complex& c){
        return Complex(real-c.real,imag-c.imag);
    }
    Complex operator*(const Complex& c){
        return Complex(real*c.real-imag*c.imag,real*c.imag+imag*c.real);
    }
    Complex operator/(const Complex& c){
        double denom=c.real*c.real+c.imag*c.imag;
        return Complex((real*c.real+imag*c.imag)/denom,(imag*c.real-real*c.imag)/denom);
    }
    friend ostream& operator<<(ostream& out,const Complex& c){
        out<<c.real;
        if(c.imag>=0){
            out<<'+'<<c.imag<<"i";
        }else{
            out<<c.imag<<"i";
        }
        return out;
    }
    friend double magnitude(const Complex& c){
        double x=c.real*c.real+c.imag*c.imag;
        double res=x;
        for(int i=0;i<10;i++){
            res=(res+x/res)/2;
        }
        return res;
    }
};

int main(){
    Complex c1(3,4),c2(1,-2);
    Complex c3=c1+c2;
    Complex c4=c1-c2;
    Complex c5=c1*c2;
    Complex c6=c1/c2;
    cout<<"c1: "<<c1<<endl;
    cout<<"c2: "<<c2<<endl;
    cout<<"c1+c2: "<<c3<<endl;
    cout<<"c1-c2: "<<c4<<endl;
    cout<<"c1*c2: "<<c5<<endl;
    cout<<"c1/c2: "<<c6<<endl;
    cout<<"c1 magnitude: "<<magnitude(c1)<<endl;
    cout<<"c2 magnitude: "<<magnitude(c2)<<endl;
}

